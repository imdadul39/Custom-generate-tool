((w, d) => {
    var st = {
        init: () => { st.t = ['fb', 'tw', 'pn', 'ln', 'mail'];['st-body', 'st-more'].forEach(z => st.setLabels(d.getElementById(z))); var x; d.getElementById('st-share-block').addEventListener('click', e => { if (x = e.target.closest('.st-share-copy')) { st.copy(x.closest('.st-share').querySelector('.st-share-val').value); st.setAction(x) } else if (x = e.target.closest('.st-share-html')) { st.copy(`<a href="${x.closest('.st-share').querySelector('.st-share-val').value}">${st.getLoc('share')}</a>`); st.setAction(x) } else if (x = e.target.closest('.st-share-more')) { st.showMore(x.dataset.id) } }); d.getElementById('st-filters').addEventListener('click', e => { if (x = e.target.closest('.st-filter')) { var t = x.dataset.id; d.getElementById('st-field-text').style.display = st.isNeedText(t) ? 'block' : 'none'; d.getElementById('st-field-img').style.display = st.isNeedImg(t) ? 'block' : 'none'; d.getElementById('st-submit').innerText = st.getLoc('all' == t ? 'create_multiple' : 'create_single'); st.setBlockClass(x.dataset.id) } }, { passive: !0 }); d.getElementById('st-more').addEventListener('click', e => { if (x = e.target.closest('.st-more-return')) { st.closeMore() } else if (x = e.target.closest('.st-share-copy')) { st.copy(x.closest('.st-share').querySelector('.st-share-val').value); st.setAction(x) } else if (x = e.target.closest('.st-share-html')) { st.copy(`<a href="${x.closest('.st-share').querySelector('.st-share-val').value}">${st.getLoc('share')}</a>`); st.setAction(x) } }); d.getElementById('st-more').addEventListener('submit', e => { e.preventDefault(); st.update() }); d.getElementById('st-body').addEventListener('submit', e => { e.preventDefault(); st.res() }) }, setLabels: z => { z.addEventListener('change', e => { var y; if (y = e.target.closest('.st-input') || e.target.closest('.st-textarea')) { e.target.closest('.st-field').classList.toggle('filled', y.value.length > 0) } }, { passive: !0 }) }, copy: s => { var w = d.getElementById('st-hidden-label').classList, el = d.getElementById('input-copy'); w.add('show'); el.value = s; el.focus({ preventScroll: !0 }); el.select(); el.setSelectionRange(0, 1e6); d.execCommand('copy'); w.remove('show') }, setAction: x => { x.classList.add('action'); w.setTimeout(() => { x.classList.remove('action') }, 1500) }, getLink: t => { var u = encodeURI(st.values[t].url), x = encodeURI(st.values[t].text), m = encodeURI(st.values[t].img); switch (t) { case 'fb': return `https://www.facebook.com/sharer/sharer.php?u=${u}`; case 'tw': return `https://twitter.com/intent/tweet?url=${u}&text=${x}`; case 'pn': return `https://pinterest.com/pin/create/button/?url=${u}&media=${m}&description=${x}`; case 'ln': return `https://www.linkedin.com/shareArticle?mini=true&url=${u}`; case 'mail': return `mailto:${st.values[t].mail}?&subject=${encodeURI(st.values[t].subject)}&cc=${st.values[t].cc}&bcc=${st.values[t].bcc}&body=${x}`; default: return '#' } }, getLoc: s => !w.stLoc || !w.stLoc[s] ? s : w.stLoc[s], isMulti: () => d.getElementById('st-all').checked, res: () => {
            st.values = {}; if (!st.isValid(d.getElementById('st-body'))) { return }
            var s = `<h3 class="st-share-title">${(st.isMulti() ? st.getLoc('title_multiple') : st.getLoc('title_single'))}</h3><div class="st-share-items">`; st.t.forEach(z => { var x = 'mail' === z ? st.getValById('st-url') + "\n" + st.getValById('st-text') : st.getValById('st-text'); st.values[z] = { url: st.getValById('st-url'), text: x, img: st.getValById('st-img'), link: '', mail: 'info@example.com', subject: '', cc: '', bcc: '', } }); s += st.getAll() + st.getShares(); s += '</div>'; st.setBlockClass(d.querySelector('#st-filters input:checked').value); d.getElementById('st-share-block').innerHTML = s; st.initStars(); !d.getElementById('st-faq') ? 0 : d.getElementById('st-faq').style.display = 'none'; w.setTimeout(() => { w.scrollTo(0, d.getElementById('st-share-section').getBoundingClientRect().y + w.pageYOffset - 10) }, 0); w.showAlternativeHostingBlock.init()
        }, isValid: f => {
            f.querySelectorAll('.error-message').forEach(z => { z.style.display = 'none' }); var u = !f.querySelector('.st-input-url') ? '' : f.querySelector('.st-input-url').value.trim(), i = !f.querySelector('.st-input-img') ? '' : f.querySelector('.st-input-img').value.trim(), p = /^(https:\/\/|http:\/\/)?[\S]+?$/; if (!!f.querySelector('.st-input-url')) { if (u.length < 1) { f.querySelector('.error-emptyurl').style.display = 'block'; return !1 } else if (i.length > 0 && (!p.test(i) || u.indexOf('.') < 1)) { f.querySelector('.error-badurl').style.display = 'block'; return !1 } }
            return !0
        }, getAll: () => st.t.reduce((z, y) => z += st.getItem(y), ''), getItem: t => {
            var l = st.getLink(t); st.values[t].link = l; return `<div class="st-share-item st-share-item-${t}">
                <div class="st-share st-share-${t}">
                    <div class="st-share-icon">${st.getLoc('icon_' + t)}</div>
                    <label for="h${t}" style="display:none;"><span style="display:none" >1</span></label>
                        <input type="text" name="h${t}" id="h${t}" class="st-share-val" value="${l}">
                        <a href="${l}" class="st-share-link" target="_blank" rel="nofollow noopener noreferrer">
                            <span class="st-message"><span class="st-ttinner">${st.getLoc('link_message')}</span></span>${st.getLoc('icon_link')}
                        </a>${st.getButton('copy')}${st.getButton('html')}
                    </div>${st.getMoreButton(t)}
                </div>`}, getButton: t => `<div class="st-share-${t}">
                <span class="st-message"><span class="st-ttinner">${st.getLoc(t + '_message')}</span></span>
                <span class="st-action"><span class="st-ttinner">${st.getLoc(t + '_action')}</span></span>
                ${st.getLoc('icon_' + t)}</div>`, getMoreButton: t => (['fb', 'tw', 'ln'].indexOf(t) == -1) ? `<div class="st-share-more" data-id="${t}">${st.getLoc('more_button')}</div>` : '', isNeedText: t => !['fb', 'ln'].includes(t), isNeedImg: t => ['pn'].includes(t), showMore: t => {
            var el = d.getElementById('st-more'), uClass = !st.values[t].url ? '' : 'filled', tClass = !st.values[t].text ? '' : 'filled', mClass = !st.values[t].img ? '' : 'filled', eClass = !st.values[t].mail ? '' : 'filled', sClass = !st.values[t].subject ? '' : 'filled', cClass = !st.values[t].cc ? '' : 'filled', bClass = !st.values[t].bcc ? '' : 'filled', s = `<div class="st-more-return"></div>${st.getItem(t, st.values[t])}`; s += 'mail' === t ? `<div id="st-field-email-more" class="st-field ${eClass}">
                    <input type="email" class="st-input st-input-mail" name="mail" id="st-mail-more" value="${st.values[t].mail}">
                    <label for="st-mail-more" class="st-label"><strong>info@example.com</strong> ${st.getLoc('mail_label')}</label></div>
                    <div id="st-field-cc-more" class="st-field ${cClass}">
                    <input type="email" class="st-input st-input-cc" name="cc" id="st-cc-more" value="${st.values[t].cc}">
                    <label for="st-cc-more" class="st-label"><strong>${st.getLoc('cc_label')}</strong> (${st.getLoc('cc__label')})</label></div>
                    <div id="st-field-bcc-more" class="st-field ${bClass}">
                    <input type="email" class="st-input st-input-bcc" name="cc" id="st-bcc-more" value="${st.values[t].bcc}">
                    <label for="st-bcc-more" class="st-label"><strong>${st.getLoc('bcc_label')}</strong> (${st.getLoc('bcc__label')})</label></div>
                    <div id="st-field-subj-more" class="st-field ${sClass}">
                    <input type="text" class="st-input st-input-subj" name="cc" id="st-subj-more" value="${st.values[t].bcc}">
                    <label for="st-subj-more" class="st-label"><strong>${st.getLoc('subj_label')}</strong> (${st.getLoc('subj__label')})</label></div>` : `<div id="st-field-url-more" class="st-field ${uClass}">
                    <input type="text" class="st-input st-input-url" name="url" id="st-url-more" value="${st.values[t].url}">
                        <label for="st-url-more" class="st-label"><strong>${st.getLoc('url')}</strong> (${st.getLoc('url_label')})</label>
                        <div class="error-message error-badurl">${st.getLoc('bad_url')}</div>
                        <div class="error-message error-emptyurl">${st.getLoc('empty_url')}</div>
                        <div class="st-field-desc">${st.getLoc('url_example')}</div></div>`; s += !st.isNeedText(t) ? '' : `<div id="st-field-text-more" class="st-field ${tClass}">
                <textarea class="st-textarea" name="text" id="st-text-more" rows="5">${st.values[t].text}</textarea>
                <label for="st-text-more" class="st-label"><strong>${st.getLoc('text')}</strong> ${st.getLoc('text_label')}</label>
            </div>`; s += !st.isNeedImg(t) ? '' : `<div id="st-field-img-more" class="st-field ${mClass}">
                <div class="error-message error-badimg">${st.getLoc('bar_url')}</div>
            </div>`; s += `<button type="submit" class="st-submit">${st.getLoc('update_button')}</button>`; el.innerHTML = s; el.dataset.id = t; d.getElementById('st-main').style.display = 'none'; el.style.display = 'block'; w.scrollTo(0, el.getBoundingClientRect().y + w.pageYOffset - 99)
        }, closeMore: () => { var el = d.getElementById('st-main'), f = d.getElementById('st-more'); el.style.display = 'block'; f.style.display = 'none'; f.innerHTML = ''; w.scrollTo(0, el.getBoundingClientRect().y + w.pageYOffset - 99) }, update: () => {
            var el = d.getElementById('st-more'), t = el.dataset.id, l; if (!st.isValid(el)) { return }
            st.values[t] = { url: st.getValById('st-url-more'), text: st.getValById('st-text-more'), img: st.getValById('st-img-more'), mail: st.getValById('st-mail-more'), subject: st.getValById('st-subj-more'), cc: st.getValById('st-cc-more'), bcc: st.getValById('st-bcc-more'), }; l = st.getLink(t); d.querySelectorAll('.st-share-' + t).forEach(z => { z.querySelector('.st-share-val').value = l; z.querySelector('.st-share-link').href = l })
        }, initStars: () => {
            var s = d.getElementById('new-post-stars-rating'); if (!s) { return }
            d.getElementById('not-used-webtools-message').style.display = 'none'; s.classList.remove('not-active'); w.reInitStarsBlock()
        }, getShares: () => {
            return `<div class="st-shares"><p class="st-shares-title">${st.getLoc('shares_title')}</p>
                <div class="st-shares-items-wrapper"><div class="st-shares-items">${st.getSharesLinks()}</div></div></div>`
        }, getSharesText: t => { var k = { 'fb': 'share', 'ln': 'share', 'pn': 'save', 'tw': 'tweet', }; return !k[t] ? '' : st.getLoc(k[t]) }, getSharesName: t => { var k = { 'fb': 'Facebook', 'tw': 'Twitter', 'ln': 'LinkedIn', 'pn': 'Pinterest', }; return !k[t] ? '' : k[t] }, getSharesLinks: () => {
            return ['fb', 'tw', 'pn', 'ln'].reduce((y, z) => {
                return y + `<a href="${st.getLink(z, st.getLoc('link'), '', '')}" rel="nofollow noopener noreferrer" class="st-shares-item st-shares-item-${z} clickoutLink" onclick="trackClickout('event', 'clickout', 'Webtools Page - Share ${st.getSharesName(z)} link', '${st.getLoc('page_title')}', this,  true);" target="_blank">
                                <span class="st-shares-item-icon">${st.getLoc('icon_' + z)}</span>${st.getSharesText(z)}</a>`
            }, '')
        }, setBlockClass: s => { var b = d.getElementById('st-share-block'); b.classList.remove('all', 'fb', 'tw', 'pn', 'ln', 'mail'); b.classList.add(s) }, getValById: i => !d.getElementById(i) ? '' : d.getElementById(i).value.trim(),
    }; w.addEventListener('DOMContentLoaded', () => { st.init() })
})(window, document)